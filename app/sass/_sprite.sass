// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$icon-logout-hover-name: 'icon-logout-hover'
$icon-logout-hover-x: 25px
$icon-logout-hover-y: 45px
$icon-logout-hover-offset-x: -25px
$icon-logout-hover-offset-y: -45px
$icon-logout-hover-width: 21px
$icon-logout-hover-height: 17px
$icon-logout-hover-total-width: 74px
$icon-logout-hover-total-height: 63px
$icon-logout-hover-image: '../img/sprite.png'
$icon-logout-hover: (25px, 45px, -25px, -45px, 21px, 17px, 74px, 63px, '../img/sprite.png', 'icon-logout-hover', )
$icon-logout-name: 'icon-logout'
$icon-logout-x: 51px
$icon-logout-y: 45px
$icon-logout-offset-x: -51px
$icon-logout-offset-y: -45px
$icon-logout-width: 21px
$icon-logout-height: 17px
$icon-logout-total-width: 74px
$icon-logout-total-height: 63px
$icon-logout-image: '../img/sprite.png'
$icon-logout: (51px, 45px, -51px, -45px, 21px, 17px, 74px, 63px, '../img/sprite.png', 'icon-logout', )
$icon-next-name: 'icon-next'
$icon-next-x: 0px
$icon-next-y: 0px
$icon-next-offset-x: 0px
$icon-next-offset-y: 0px
$icon-next-width: 22px
$icon-next-height: 40px
$icon-next-total-width: 74px
$icon-next-total-height: 63px
$icon-next-image: '../img/sprite.png'
$icon-next: (0px, 0px, 0px, 0px, 22px, 40px, 74px, 63px, '../img/sprite.png', 'icon-next', )
$icon-prev-name: 'icon-prev'
$icon-prev-x: 27px
$icon-prev-y: 0px
$icon-prev-offset-x: -27px
$icon-prev-offset-y: 0px
$icon-prev-width: 22px
$icon-prev-height: 40px
$icon-prev-total-width: 74px
$icon-prev-total-height: 63px
$icon-prev-image: '../img/sprite.png'
$icon-prev: (27px, 0px, -27px, 0px, 22px, 40px, 74px, 63px, '../img/sprite.png', 'icon-prev', )
$icon-user-hover-name: 'icon-user-hover'
$icon-user-hover-x: 54px
$icon-user-hover-y: 0px
$icon-user-hover-offset-x: -54px
$icon-user-hover-offset-y: 0px
$icon-user-hover-width: 20px
$icon-user-hover-height: 18px
$icon-user-hover-total-width: 74px
$icon-user-hover-total-height: 63px
$icon-user-hover-image: '../img/sprite.png'
$icon-user-hover: (54px, 0px, -54px, 0px, 20px, 18px, 74px, 63px, '../img/sprite.png', 'icon-user-hover', )
$icon-user-name: 'icon-user'
$icon-user-x: 0px
$icon-user-y: 45px
$icon-user-offset-x: 0px
$icon-user-offset-y: -45px
$icon-user-width: 20px
$icon-user-height: 18px
$icon-user-total-width: 74px
$icon-user-total-height: 63px
$icon-user-image: '../img/sprite.png'
$icon-user: (0px, 45px, 0px, -45px, 20px, 18px, 74px, 63px, '../img/sprite.png', 'icon-user', )
$spritesheet-width: 74px
$spritesheet-height: 63px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($icon-logout-hover, $icon-logout, $icon-next, $icon-prev, $icon-user-hover, $icon-user, )
$spritesheet: (74px, 63px, '../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
